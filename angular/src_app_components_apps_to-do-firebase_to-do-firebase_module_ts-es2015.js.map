{"version":3,"sources":["./src/app/components/apps/to-do-firebase/to-do-firebase-routing.module.ts","./src/app/components/apps/to-do-firebase/to-do-firebase.component.ts","./src/app/components/apps/to-do-firebase/to-do-firebase.component.html","./src/app/components/apps/to-do-firebase/to-do-firebase.module.ts","./src/app/shared/services/firebase/todo.service.ts"],"names":[],"mappings":"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","file":"src_app_components_apps_to-do-firebase_to-do-firebase_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ToDoFirebaseComponent } from './to-do-firebase.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        component: ToDoFirebaseComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ToDoFirebaseRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport * as data from '../../../shared/data/todo/todo';\nimport { FirebaseService } from '../../../shared/services/firebase/todo.service';\nimport { Router } from '@angular/router';\n\n\nexport interface Task {\n  text: string\n  completed: boolean\n}\n@Component({\n  selector: 'app-to-do-firebase',\n  templateUrl: './to-do-firebase.component.html',\n  styleUrls: ['./to-do-firebase.component.scss']\n})\nexport class ToDoFirebaseComponent implements OnInit {\n\n  public text: string;\n  public todos: Task[] = data.task;\n  public completed: boolean;\n  public redBorder: boolean = false;\n  public items: Array<any>;\n  public taskId: any;\n  public visible: boolean\n  constructor(private toastrService: ToastrService, private router: Router, private firebaseService: FirebaseService) { }\n\n  //Add new task\n  public addTask(text) {\n    if (!text) {\n      this.redBorder = true;\n      return false;\n    }\n    this.firebaseService.createTask(text)\n      .then(\n        res => {\n          this.resetFields();\n          this.router.navigate(['/to-do-firebase']);\n        }\n      )\n    this.redBorder = false;\n  }\n\n  resetFields() {\n    this.text = '';\n  }\n\n  //For completing your task\n  public taskCompleted(todo) {\n    todo.task = todo.payload.doc.data().task\n    todo.completed = todo.payload.doc.data().completed\n    todo.completed = !todo.completed\n    todo.nameToSearch = todo.task.toLowerCase();\n    todo.completed ? this.toastrService.success(todo.text, \"Mark as completed\") : this.toastrService.error(todo.text, \"Mark as Incompleted\")\n    this.firebaseService.updateTask(todo.payload.doc.id, todo)\n      .then(\n        res => {\n          this.router.navigate(['/to-do-firebase']);\n        }\n      )\n  }\n\n  //For deleting a task\n  public taskDeleted(taskid) {\n    this.firebaseService.deleteTask(taskid)\n      .then(\n        res => {\n          this.router.navigate(['/to-do-firebase']);\n        },\n        err => {\n        }\n      )\n  }\n\n  //Mark and unmark all task\n  public markAllAction(action) {\n    this.firebaseService.markAll(action);\n    this.completed = action\n    action ? this.toastrService.success(\"All Task as Completed\") : this.toastrService.error(\"All Task as Incompleted\")\n  }\n\n  ngOnInit() {\n    //Get complete list of task\n    this.firebaseService.getTasks().subscribe(result => {\n      this.items = result;      \n    });\n\n  }\n\n}\n","<app-breadcrumb [title]=\"'To Do Firebase'\" [items]=\"['Apps']\" [active_item]=\"'To Do Firebase'\"></app-breadcrumb>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n      <div class=\"col-xl-12\">\n          <div class=\"card\">\n              <div class=\"card-header\">\n                  <h5>To-Do</h5>\n              </div>\n              <div class=\"card-body\">\n                  <div class=\"todo\">\n                      <div class=\"todo-list-wrapper\">\n                          <div class=\"todo-list-container\">\n                              <div class=\"mark-all-tasks\">\n                                  <div class=\"mark-all-tasks-container\"><span class=\"mark-all-btn\"\n                                          id=\"mark-all-finished\" role=\"button\" [ngClass]=\"{'move-up':completed}\"\n                                          id=\"mark-all-finished\" role=\"button\"><span class=\"btn-label\">Mark all as\n                                              finished</span><span class=\"action-box completed\"\n                                              (click)=\"markAllAction(true);\"><i class=\"icon\"><i\n                                                      class=\"icon-check\"></i></i></span></span><span\n                                          class=\"mark-all-btn move-down\" id=\"mark-all-incomplete\" role=\"button\"\n                                          [ngClass]=\"{'move-down':!completed}\"><span class=\"btn-label\">Mark\n                                              all as Incomplete</span><span class=\"action-box\"><i class=\"icon\"\n                                                  (click)=\"markAllAction(false);\"><i\n                                                      class=\"icon-check\"></i></i></span></span></div>\n                              </div>\n                              <div class=\"todo-list-body\">\n                                  <ul id=\"todo-list\">\n                                      <li class=\"task\"\n                                          [ngClass]=\"{'completed':todo.payload.doc.data().completed}\"\n                                          *ngFor=\"let todo of items ;let i=index\">\n                                          <div class=\"task-container\">\n                                              <h4 class=\"task-label\">{{todo.payload.doc.data().task}}</h4><span\n                                                  class=\"task-action-btn\"><span class=\"action-box large delete-btn\"\n                                                      title=\"Delete Task\" routerLink=\"/to-do\"\n                                                      (click)=\"taskDeleted(todo.payload.doc.id)\"><i class=\"icon\"><i\n                                                              class=\"icon-trash\"></i></i></span>\n                                                  <span class=\"action-box large complete-btn\" title=\"Mark Complete\"\n                                                      (click)=\"taskCompleted(todo)\"><i class=\"icon\"><i\n                                                              class=\"icon-check\"></i></i></span></span>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n                              <div class=\"todo-list-footer\">\n                                  <div class=\"add-task-btn-wrapper\"><span class=\"add-task-btn\"\n                                          [ngClass]=\"{'hide': visible}\">\n                                          <button class=\"btn btn-primary\" (click)=\"visible=true\"><i\n                                                  class=\"icon-plus\"></i> Add new\n                                              task</button></span></div>\n                                  <div class=\"new-task-wrapper\" [ngClass]=\"{'visible': visible}\">\n                                      <textarea class=\"textfield\" name=\"todo\" id=\"new-task\" [(ngModel)]=\"text\"\n                                          [class.border-danger]=\"redBorder\"></textarea>\n                                      <span class=\"btn btn-danger cancel-btn\" id=\"close-task-panel\"\n                                          (click)=\"visible=false\">Close</span>\n                                      <span class=\"btn btn-success ml-3 add-new-task-btn\" id=\"add-task\"\n                                          (click)=\"addTask(text)\">Add Task</span>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                      <div class=\"notification-popup hide\">\n                          <p><span class=\"task\"></span><span class=\"notification-text\"></span></p>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { ToDoFirebaseRoutingModule } from './to-do-firebase-routing.module';\n\nimport { ToDoFirebaseComponent } from './to-do-firebase.component';\n\n@NgModule({\n  declarations: [ToDoFirebaseComponent],\n  imports: [\n    CommonModule,\n    ToDoFirebaseRoutingModule,\n    FormsModule,\n    NgbModule,\n    SharedModule\n  ]\n})\nexport class ToDoFirebaseModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  constructor(public db: AngularFirestore) { }\n\n  //For Creating a new task\n  createTask(value) {\n    return this.db.collection('todo').add({\n      task: value,\n      completed: false,\n      nameToSearch: value.toLowerCase()\n    });\n  }\n\n  //Display complete list of task\n  getTasks() {\n    return this.db.collection('todo').snapshotChanges();\n  }\n\n  //For deleting particular task\n  deleteTask(taskKey) {\n    return this.db.collection('todo').doc(taskKey).delete();\n  }\n\n  //For updating particular task\n  updateTask(taskKey, value) {\n    return this.db.collection('todo').doc(taskKey).set(\n      {\n        task: value.task,\n        completed: value.completed,\n        nameToSearch: value.nameToSearch\n      }\n    )\n  }\n\n  markAll(action) {\n    this.db.collection('todo').get().forEach((item) => {\n      return item.docs.map(m => {\n        return this.db.doc(`todo/${m.id}`).update({ completed: action });\n      });\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}