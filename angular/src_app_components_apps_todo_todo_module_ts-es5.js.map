{"version":3,"sources":["webpack:///src/app/components/apps/todo/todo-routing.module.ts","webpack:///src/app/components/apps/todo/todo.component.html","webpack:///src/app/components/apps/todo/todo.component.ts","webpack:///src/app/components/apps/todo/todo.module.ts"],"names":["routes","path","children","component","TodoComponent","TodoRoutingModule","RouterModule","toastrService","todos","red_border","text","task","completed","push","success","error","index","splice","action","filter","markAllAction","addTask","TodoModule","CommonModule","FormsModule","ReactiveFormsModule","SharedModule"],"mappings":"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","file":"src_app_components_apps_todo_todo_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TodoComponent } from './todo.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        component: TodoComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TodoRoutingModule { }\n","<app-breadcrumb [title]=\"'To Do'\" [items]=\"['Apps']\" [active_item]=\"'To Do'\"></app-breadcrumb>\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-xl-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h5>To-Do</h5>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"todo\">\n                        <div class=\"todo-list-wrapper\">\n                            <div class=\"todo-list-container\">\n                                <div class=\"mark-all-tasks\">\n                                    <div class=\"mark-all-tasks-container\"><span class=\"mark-all-btn\"\n                                            id=\"mark-all-finished\" role=\"button\" [ngClass]=\"{'move-up':completed}\"\n                                            id=\"mark-all-finished\" role=\"button\"><span class=\"btn-label\">Mark all as\n                                                finished</span><span class=\"action-box completed\"\n                                                (click)=\"markAllAction(true);\"><i class=\"icon\"><i\n                                                        class=\"icon-check\"></i></i></span></span><span\n                                            class=\"mark-all-btn move-down\" id=\"mark-all-incomplete\" role=\"button\"\n                                            [ngClass]=\"{'move-down':!completed}\"><span class=\"btn-label\">Mark\n                                                all as Incomplete</span><span class=\"action-box\"><i class=\"icon\"\n                                                    (click)=\"markAllAction(false);\"><i\n                                                        class=\"icon-check\"></i></i></span></span></div>\n                                </div>\n                                <div class=\"todo-list-body\">\n                                    <ul id=\"todo-list\">\n                                        <li class=\"task\"\n                                            [ngClass]=\"{'completed':todo.completed ? todo.completed : completed}\"\n                                            *ngFor=\"let todo of todos;let i=index\">\n                                            <div class=\"task-container\">\n                                                <h4 class=\"task-label\">{{todo.text}}</h4><span\n                                                    class=\"task-action-btn\"><span class=\"action-box large delete-btn\"\n                                                        title=\"Delete Task\" routerLink=\"/to-do\"\n                                                        (click)=\"taskDeleted(i)\"><i class=\"icon\"><i\n                                                                class=\"icon-trash\"></i></i></span>\n                                                    <span class=\"action-box large complete-btn\" title=\"Mark Complete\"\n                                                        (click)=\"taskCompleted(todo)\"><i class=\"icon\"><i\n                                                                class=\"icon-check\"></i></i></span></span>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <div class=\"todo-list-footer\">\n                                    <div class=\"add-task-btn-wrapper\"><span class=\"add-task-btn\"\n                                            [ngClass]=\"{'hide': visible}\">\n                                            <button class=\"btn btn-primary\" (click)=\"visible=true\"><i\n                                                    class=\"icon-plus\"></i> Add new\n                                                task</button></span></div>\n                                    <div class=\"new-task-wrapper\" [ngClass]=\"{'visible': visible}\">\n                                        <textarea class=\"textfield\" name=\"todo\" id=\"new-task\" [(ngModel)]=\"text\"\n                                            [class.border-danger]=\"red_border\"></textarea>\n                                        <span class=\"btn btn-danger cancel-btn\" id=\"close-task-panel\"\n                                            (click)=\"visible=false\">Close</span>\n                                        <span class=\"btn btn-success ml-3 add-new-task-btn\" id=\"add-task\"\n                                            (click)=\"addTask(text)\">Add Task</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"notification-popup hide\">\n                            <p><span class=\"task\"></span><span class=\"notification-text\"></span></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport * as data from '../../../shared/data/todo/todo';\n\nexport interface Task {\n  text: string\n  completed: boolean\n}\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss'],\n})\nexport class TodoComponent implements OnInit {\n  public text: string;\n  public todos: Task[] = data.task;\n  public completed: boolean;\n  public red_border: boolean = false;\n  public visible: boolean\n\n  constructor(private toastrService: ToastrService) { }\n\n  ngOnInit() { }\n\n  public addTask(text) {\n    if (!text) {\n      this.red_border = true;\n      return false;\n    }\n    let task = { text: text, completed: false }\n    this.todos.push(task);\n    this.text = '';\n    this.red_border = false;\n  }\n\n  public taskCompleted(task) {\n    task.completed = !task.completed\n    task.completed ? this.toastrService.success(task.text, \"Mark as completed\") : this.toastrService.error(task.text, \"Mark as Incompleted\")\n  }\n\n  public taskDeleted(index) {\n    this.todos.splice(index, 1);\n  }\n\n  public markAllAction(action) {\n    this.todos.filter(task => {\n      task.completed = action\n    })\n    this.completed = action\n    action ? this.toastrService.success(\"All Task as Completed\") : this.toastrService.error(\"All Task as Incompleted\")\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { TodoRoutingModule } from './todo-routing.module';\n\nimport { TodoComponent } from './todo.component';\n\n@NgModule({\n  declarations: [TodoComponent],\n  imports: [\n    CommonModule,\n    TodoRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  providers: []\n})\nexport class TodoModule { }\n"]}