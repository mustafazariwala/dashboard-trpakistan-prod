{"version":3,"sources":["webpack:///src/app/components/apps/to-do-firebase/to-do-firebase-routing.module.ts","webpack:///src/app/components/apps/to-do-firebase/to-do-firebase.component.html","webpack:///src/app/components/apps/to-do-firebase/to-do-firebase.component.ts","webpack:///src/app/components/apps/to-do-firebase/to-do-firebase.module.ts","webpack:///src/app/shared/services/firebase/todo.service.ts"],"names":["routes","path","children","component","ToDoFirebaseComponent","ToDoFirebaseRoutingModule","RouterModule","toastrService","router","firebaseService","todos","redBorder","text","createTask","then","res","resetFields","navigate","todo","task","payload","doc","data","completed","nameToSearch","toLowerCase","success","error","updateTask","id","taskid","deleteTask","err","action","markAll","getTasks","subscribe","result","items","markAllAction","addTask","ToDoFirebaseModule","CommonModule","FormsModule","NgbModule","SharedModule","FirebaseService","db","value","collection","add","snapshotChanges","taskKey","set","get","forEach","item","docs","map","m","update"],"mappings":"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","file":"src_app_components_apps_to-do-firebase_to-do-firebase_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ToDoFirebaseComponent } from './to-do-firebase.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        component: ToDoFirebaseComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ToDoFirebaseRoutingModule { }\n","<app-breadcrumb [title]=\"'To Do Firebase'\" [items]=\"['Apps']\" [active_item]=\"'To Do Firebase'\"></app-breadcrumb>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n      <div class=\"col-xl-12\">\n          <div class=\"card\">\n              <div class=\"card-header\">\n                  <h5>To-Do</h5>\n              </div>\n              <div class=\"card-body\">\n                  <div class=\"todo\">\n                      <div class=\"todo-list-wrapper\">\n                          <div class=\"todo-list-container\">\n                              <div class=\"mark-all-tasks\">\n                                  <div class=\"mark-all-tasks-container\"><span class=\"mark-all-btn\"\n                                          id=\"mark-all-finished\" role=\"button\" [ngClass]=\"{'move-up':completed}\"\n                                          id=\"mark-all-finished\" role=\"button\"><span class=\"btn-label\">Mark all as\n                                              finished</span><span class=\"action-box completed\"\n                                              (click)=\"markAllAction(true);\"><i class=\"icon\"><i\n                                                      class=\"icon-check\"></i></i></span></span><span\n                                          class=\"mark-all-btn move-down\" id=\"mark-all-incomplete\" role=\"button\"\n                                          [ngClass]=\"{'move-down':!completed}\"><span class=\"btn-label\">Mark\n                                              all as Incomplete</span><span class=\"action-box\"><i class=\"icon\"\n                                                  (click)=\"markAllAction(false);\"><i\n                                                      class=\"icon-check\"></i></i></span></span></div>\n                              </div>\n                              <div class=\"todo-list-body\">\n                                  <ul id=\"todo-list\">\n                                      <li class=\"task\"\n                                          [ngClass]=\"{'completed':todo.payload.doc.data().completed}\"\n                                          *ngFor=\"let todo of items ;let i=index\">\n                                          <div class=\"task-container\">\n                                              <h4 class=\"task-label\">{{todo.payload.doc.data().task}}</h4><span\n                                                  class=\"task-action-btn\"><span class=\"action-box large delete-btn\"\n                                                      title=\"Delete Task\" routerLink=\"/to-do\"\n                                                      (click)=\"taskDeleted(todo.payload.doc.id)\"><i class=\"icon\"><i\n                                                              class=\"icon-trash\"></i></i></span>\n                                                  <span class=\"action-box large complete-btn\" title=\"Mark Complete\"\n                                                      (click)=\"taskCompleted(todo)\"><i class=\"icon\"><i\n                                                              class=\"icon-check\"></i></i></span></span>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n                              <div class=\"todo-list-footer\">\n                                  <div class=\"add-task-btn-wrapper\"><span class=\"add-task-btn\"\n                                          [ngClass]=\"{'hide': visible}\">\n                                          <button class=\"btn btn-primary\" (click)=\"visible=true\"><i\n                                                  class=\"icon-plus\"></i> Add new\n                                              task</button></span></div>\n                                  <div class=\"new-task-wrapper\" [ngClass]=\"{'visible': visible}\">\n                                      <textarea class=\"textfield\" name=\"todo\" id=\"new-task\" [(ngModel)]=\"text\"\n                                          [class.border-danger]=\"redBorder\"></textarea>\n                                      <span class=\"btn btn-danger cancel-btn\" id=\"close-task-panel\"\n                                          (click)=\"visible=false\">Close</span>\n                                      <span class=\"btn btn-success ml-3 add-new-task-btn\" id=\"add-task\"\n                                          (click)=\"addTask(text)\">Add Task</span>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                      <div class=\"notification-popup hide\">\n                          <p><span class=\"task\"></span><span class=\"notification-text\"></span></p>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport * as data from '../../../shared/data/todo/todo';\nimport { FirebaseService } from '../../../shared/services/firebase/todo.service';\nimport { Router } from '@angular/router';\n\n\nexport interface Task {\n  text: string\n  completed: boolean\n}\n@Component({\n  selector: 'app-to-do-firebase',\n  templateUrl: './to-do-firebase.component.html',\n  styleUrls: ['./to-do-firebase.component.scss']\n})\nexport class ToDoFirebaseComponent implements OnInit {\n\n  public text: string;\n  public todos: Task[] = data.task;\n  public completed: boolean;\n  public redBorder: boolean = false;\n  public items: Array<any>;\n  public taskId: any;\n  public visible: boolean\n  constructor(private toastrService: ToastrService, private router: Router, private firebaseService: FirebaseService) { }\n\n  //Add new task\n  public addTask(text) {\n    if (!text) {\n      this.redBorder = true;\n      return false;\n    }\n    this.firebaseService.createTask(text)\n      .then(\n        res => {\n          this.resetFields();\n          this.router.navigate(['/to-do-firebase']);\n        }\n      )\n    this.redBorder = false;\n  }\n\n  resetFields() {\n    this.text = '';\n  }\n\n  //For completing your task\n  public taskCompleted(todo) {\n    todo.task = todo.payload.doc.data().task\n    todo.completed = todo.payload.doc.data().completed\n    todo.completed = !todo.completed\n    todo.nameToSearch = todo.task.toLowerCase();\n    todo.completed ? this.toastrService.success(todo.text, \"Mark as completed\") : this.toastrService.error(todo.text, \"Mark as Incompleted\")\n    this.firebaseService.updateTask(todo.payload.doc.id, todo)\n      .then(\n        res => {\n          this.router.navigate(['/to-do-firebase']);\n        }\n      )\n  }\n\n  //For deleting a task\n  public taskDeleted(taskid) {\n    this.firebaseService.deleteTask(taskid)\n      .then(\n        res => {\n          this.router.navigate(['/to-do-firebase']);\n        },\n        err => {\n        }\n      )\n  }\n\n  //Mark and unmark all task\n  public markAllAction(action) {\n    this.firebaseService.markAll(action);\n    this.completed = action\n    action ? this.toastrService.success(\"All Task as Completed\") : this.toastrService.error(\"All Task as Incompleted\")\n  }\n\n  ngOnInit() {\n    //Get complete list of task\n    this.firebaseService.getTasks().subscribe(result => {\n      this.items = result;      \n    });\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { ToDoFirebaseRoutingModule } from './to-do-firebase-routing.module';\n\nimport { ToDoFirebaseComponent } from './to-do-firebase.component';\n\n@NgModule({\n  declarations: [ToDoFirebaseComponent],\n  imports: [\n    CommonModule,\n    ToDoFirebaseRoutingModule,\n    FormsModule,\n    NgbModule,\n    SharedModule\n  ]\n})\nexport class ToDoFirebaseModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  constructor(public db: AngularFirestore) { }\n\n  //For Creating a new task\n  createTask(value) {\n    return this.db.collection('todo').add({\n      task: value,\n      completed: false,\n      nameToSearch: value.toLowerCase()\n    });\n  }\n\n  //Display complete list of task\n  getTasks() {\n    return this.db.collection('todo').snapshotChanges();\n  }\n\n  //For deleting particular task\n  deleteTask(taskKey) {\n    return this.db.collection('todo').doc(taskKey).delete();\n  }\n\n  //For updating particular task\n  updateTask(taskKey, value) {\n    return this.db.collection('todo').doc(taskKey).set(\n      {\n        task: value.task,\n        completed: value.completed,\n        nameToSearch: value.nameToSearch\n      }\n    )\n  }\n\n  markAll(action) {\n    this.db.collection('todo').get().forEach((item) => {\n      return item.docs.map(m => {\n        return this.db.doc(`todo/${m.id}`).update({ completed: action });\n      });\n    });\n  }\n\n}\n"]}